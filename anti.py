import os
from colorama import Fore
from tqdm import tqdm
import hashlib

path = os.getcwd() + '/mobile_antivirus_system/Hashes'   #get the current path
os.chdir(path)						#nevigating to hash directory
total_files = len(os.listdir(path))			#counting number of files in hash directory
# total_files = len(files)			
files_processed = 0
flag = 0
file_name = path

def hash_checker(hashin):
	'''
	Compares given hash with hash database
	param hashin: hash of generated file
	return num: if hash is found than file name 
	'''
	global files_processed
	print("hash of file is : ",hashin)
	with tqdm(total=100) as pbar:
		for i in range(1,total_files):	
			num_s = str(i + 1)
			files_processed += 1
			progress_percentage = (files_processed / total_files) * 100
			pbar.update(progress_percentage - pbar.n)
			# hash_file = os.path.join(path, files[i])
			hash_file = num_s
			pbar.set_postfix_str(num_s + ' file')
			try:
				with open(hash_file,'r') as hashes:
					for s_hash in hashes:
						s_hash = s_hash.strip()
						if(hashin == s_hash):
							global flag
							flag = 1
							return hash_file
						else:
							flag = 0			
			except FileNotFoundError:
				print(Fore.GREEN + "\nSearched through all database")
				break
			except:
				print("Error")
				break


def hash_gen(filein):
	'''
	calculates MD5 hash of given file
	param filein: file which hash needs to be generated
	return hash_f: MD5 hash value of the file
	'''
	hash_f = hashlib.md5(open(filein,'rb').read()).hexdigest()
	return hash_f


if __name__ == '__main__':
	#main method
	filein = input("Enter file path :" )
	hash_f = hash_gen(filein)
	val = hash_checker(hash_f)
	if(flag == 1 ):
		print(Fore.RED + "FILE IS INFECTED")
		print("Hash found in database file : ",val)
	else:
		print(Fore.GREEN + "FILE IS SAFE")
					
